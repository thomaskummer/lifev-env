!*********************************************************************
! ForTrilinos: Object-Oriented Fortran 2003 interface to Trilinos
!                Copyright 2010 Sandia Corporation
!
! Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,
! the U.S. Government retains certain rights in this software.
!
! Redistribution and use in source and binary forms, with or without
! modification, are permitted provided that the following conditions are met:
!
! 1. Redistributions of source code must retain the above copyright
!    notice, this list of conditions and the following disclaimer.
!
! 2. Redistributions in binary form must reproduce the above copyright
!    notice, this list of conditions and the following disclaimer in the
!    documentation and/or other materials provided with the distribution.
!
! 3. Neither the name of the Corporation nor the names of the
!    contributors may be used to endorse or promote products derived from
!    this software without specific prior written permission.
!
! THIS SOFTWARE IS PROVIDED BY SANDIA CORPORATION "AS IS" AND ANY
! EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
! IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
! PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL SANDIA CORPORATION OR THE
! CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
! EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
! PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
! PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
! LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
! NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
! SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
!
! Questions? Contact Karla Morris  (knmorri@sandia.gov)
!                    Damian Rouson (rouson@sandia.gov)
!*********************************************************************

#include "ForTrilinos_config.h"
#include "runtime_macros.h"

FORTRILINOS_UNITTEST_MODULE_DEF(CLASS_BEING_TESTED)
    use FEpetra_SerialComm,only:Epetra_SerialComm
    use FEpetra_Comm,only:Epetra_Comm
    use iso_c_binding,only:c_int,c_double,c_char,c_long
FORTRILINOS_UNITTEST_MODULE_BEGIN(CLASS_BEING_TESTED)

  FORTRILINOS_UNITTEST_DEF(CLASS_BEING_TESTED, Alias)
  FORTRILINOS_UNITTEST_BEGIN
    use ForTrilinos_enums
    implicit none 
    type(Epetra_SerialComm):: comm
    type(FT_Epetra_SerialComm_ID_t):: serial_commID
    type(FT_Epetra_Comm_ID_t) ::commID,comm_alias_ID
    success = .TRUE.
    ECHO(comm = Epetra_SerialComm())
    ECHO(serial_commID = comm%get_EpetraSerialComm_ID())
    ECHO(commID = comm%get_EpetraComm_ID())
    ECHO(comm_alias_ID = comm%alias_EpetraComm_ID(comm%generalize_EpetraComm()))
    TEST_EQUALITY(serial_commID%table, FT_Epetra_SerialComm_ID)
    TEST_EQUALITY(serial_commID%index, 0)
    TEST_EQUALITY(serial_commID%is_const, FT_False)
    TEST_EQUALITY(commID%table, FT_Epetra_Comm_ID)
    TEST_EQUALITY(commID%index, 0)
    TEST_EQUALITY(commID%is_const, FT_False)
    TEST_EQUALITY(comm_alias_ID%table, FT_Epetra_Comm_ID)
    TEST_EQUALITY(comm_alias_ID%index, 1)
    TEST_EQUALITY(comm_alias_ID%is_const, FT_False)
    call comm%force_finalize()
  FORTRILINOS_UNITTEST_END

FORTRILINOS_UNITTEST_MODULE_END(CLASS_BEING_TESTED)
