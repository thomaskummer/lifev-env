Each unit test should test one function with one set of input
values.  With ForTrilinos, testing that one function will often
require running several other functions first to set up the
desired initial state.

To add new ForTrilinos unit tests:

1) Create a directory for the class you are testing, using the
   naming convention PackageName_ClassName.
2) Copy TEMPLATE_ONLY/CMakeLists.txt to the directory you created
   in step 1.
3) Edit the line containing "PackageName_ClassName" in the new
   CMakeLists.txt file, replacing PackageName_ClassName with the
   directory name.
4) Copy TEMPLATE_ONLY/PackageName_ClassName_tests.un (for testing
   the procedural bindings only) and
   TEMPLATE_ONLY/PackageName_ClassName_oo_tests.un (for testing
   object-oriented code) to the directory you created in step 1,
   renaming them to again replace PackageName_ClassName with the
   value appropriate for the class you are testing.
5) Add any new unittests to the renamed files from step 4 above,
   following the form of the examples already in the files.
6) Add the directory name to the "ADD_SUBDIRECTORIES" block in
   the CMakeLists.txt file in the *parent* directory (i.e.
   unittests/CMakeLists.txt) after the UNITTEST_PARSER and
   UNITTEST_LAUNCHER entries.

You should be set to go.  From the root of your build tree, run
the command:

ctest -R '^ForTrilinos_' -W 100

If anything fails, you can find more information by running with
the -V option:

ctest -R '^ForTrilinos_' -W 100 -V

Contact Nicole Lemaster <mnlemas@sandia.gov> with questions.
